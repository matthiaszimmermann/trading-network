package org.eclipse.scout.tradingnetwork.shared.person;

import java.util.Date;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "org.eclipse.scout.tradingnetwork.client.person.PersonForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class PersonFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public City getCity() {
    return getFieldByClass(City.class);
  }

  public Country getCountry() {
    return getFieldByClass(Country.class);
  }

  public DateOfBirth getDateOfBirth() {
    return getFieldByClass(DateOfBirth.class);
  }

  public Email getEmail() {
    return getFieldByClass(Email.class);
  }

  public EmailWork getEmailWork() {
    return getFieldByClass(EmailWork.class);
  }

  public Events getEvents() {
    return getFieldByClass(Events.class);
  }

  public FirstName getFirstName() {
    return getFieldByClass(FirstName.class);
  }

  public GenderGroup getGenderGroup() {
    return getFieldByClass(GenderGroup.class);
  }

  public LastName getLastName() {
    return getFieldByClass(LastName.class);
  }

  public Mobile getMobile() {
    return getFieldByClass(Mobile.class);
  }

  public Notes getNotes() {
    return getFieldByClass(Notes.class);
  }

  public Organization getOrganization() {
    return getFieldByClass(Organization.class);
  }

  /**
   * access method for property PersonId.
   */
  public String getPersonId() {
    return getPersonIdProperty().getValue();
  }

  /**
   * access method for property PersonId.
   */
  public void setPersonId(String personId) {
    getPersonIdProperty().setValue(personId);
  }

  public PersonIdProperty getPersonIdProperty() {
    return getPropertyByClass(PersonIdProperty.class);
  }

  public Phone getPhone() {
    return getFieldByClass(Phone.class);
  }

  public PhoneWork getPhoneWork() {
    return getFieldByClass(PhoneWork.class);
  }

  public PictureUrl getPictureUrl() {
    return getFieldByClass(PictureUrl.class);
  }

  public Position getPosition() {
    return getFieldByClass(Position.class);
  }

  public ShowPassword getShowPassword() {
    return getFieldByClass(ShowPassword.class);
  }

  public Street getStreet() {
    return getFieldByClass(Street.class);
  }

  public WalletAddress getWalletAddress() {
    return getFieldByClass(WalletAddress.class);
  }

  public WalletPassword getWalletPassword() {
    return getFieldByClass(WalletPassword.class);
  }

  public WalletPath getWalletPath() {
    return getFieldByClass(WalletPath.class);
  }

  public static class City extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class Country extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class DateOfBirth extends AbstractValueFieldData<Date> {

    private static final long serialVersionUID = 1L;
  }

  public static class Email extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class EmailWork extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class Events extends AbstractTableFieldBeanData {

    private static final long serialVersionUID = 1L;

    @Override
    public EventsRowData addRow() {
      return (EventsRowData) super.addRow();
    }

    @Override
    public EventsRowData addRow(int rowState) {
      return (EventsRowData) super.addRow(rowState);
    }

    @Override
    public EventsRowData createRow() {
      return new EventsRowData();
    }

    @Override
    public Class<? extends AbstractTableRowData> getRowType() {
      return EventsRowData.class;
    }

    @Override
    public EventsRowData[] getRows() {
      return (EventsRowData[]) super.getRows();
    }

    @Override
    public EventsRowData rowAt(int index) {
      return (EventsRowData) super.rowAt(index);
    }

    public void setRows(EventsRowData[] rows) {
      super.setRows(rows);
    }

    public static class EventsRowData extends AbstractTableRowData {

      private static final long serialVersionUID = 1L;
      public static final String id = "id";
      public static final String title = "title";
      public static final String starts = "starts";
      public static final String city = "city";
      public static final String country = "country";
      private String m_id;
      private String m_title;
      private Date m_starts;
      private String m_city;
      private String m_country;

      public String getId() {
        return m_id;
      }

      public void setId(String newId) {
        m_id = newId;
      }

      public String getTitle() {
        return m_title;
      }

      public void setTitle(String newTitle) {
        m_title = newTitle;
      }

      public Date getStarts() {
        return m_starts;
      }

      public void setStarts(Date newStarts) {
        m_starts = newStarts;
      }

      public String getCity() {
        return m_city;
      }

      public void setCity(String newCity) {
        m_city = newCity;
      }

      public String getCountry() {
        return m_country;
      }

      public void setCountry(String newCountry) {
        m_country = newCountry;
      }
    }
  }

  public static class FirstName extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class GenderGroup extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class LastName extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class Mobile extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class Notes extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class Organization extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class PersonIdProperty extends AbstractPropertyData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class Phone extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class PhoneWork extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class PictureUrl extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class Position extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class ShowPassword extends AbstractValueFieldData<Boolean> {

    private static final long serialVersionUID = 1L;
  }

  public static class Street extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class WalletAddress extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class WalletPassword extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class WalletPath extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }
}
